---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cert-manager
  annotations:
    kubernetes.io/description: "cert-manager automates the management and issuance of TLS certificates from various certificate authorities"
spec:
  interval: 20m
  timeout: 10m
  chart:
    spec:
      chart: cert-manager
      version: v1.16.0
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: cert-manager
  values:
    installCRDs: true
    global:
      podSecurityPolicy:
        enabled: false
        useAppArmor: false
      # Security context for all cert-manager pods
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      
    # Controller security configuration
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1001
      runAsGroup: 1001
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault

    # Controller resource limits
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

    # Webhook security configuration  
    webhook:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      
      # Webhook resource limits
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi

      # Network policy support
      networkPolicy:
        enabled: true
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                name: cert-manager
        egress:
        - {}

    # CA Injector security configuration
    cainjector:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      
      # CA Injector resource limits
      resources:
        limits:
          cpu: 300m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 128Mi

    # Enable Prometheus monitoring
    prometheus:
      enabled: true
      servicemonitor:
        enabled: true
        labels:
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/component: controller

    # Node affinity to avoid control plane
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          preference:
            matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
