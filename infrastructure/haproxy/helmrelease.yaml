# HAProxy Ingress Controller HelmRelease Template
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: haproxy-kubernetes-ingress
spec:
  interval: 20m
  chart:
    spec:
      chart: kubernetes-ingress
      version: 1.44.4
      sourceRef:
        kind: HelmRepository
        name: haproxytech
        namespace: flux-system
  values:
    # Controller configuration
    controller:
      # Deployment settings
      kind: DaemonSet  # or Deployment
      replicaCount: 1  # Ignored for DaemonSet
      
      # HAProxy configuration
      config:
        # Health checks
        check-interval: "20s"
        
        # Backend server scaling
        scale-server-slots: "12"
        
        # Headers and forwarding
        forwarded-for: "true"
        
        # SSL/TLS
        ssl-redirect: "true"
        ssl-min-ver: "TLSv1.2"
        ssl-options: "no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets"
        
        # Timeouts
        timeout-connect: "30s"
        timeout-client: "30s"
        timeout-server: "30s"
        timeout-http-request: "10s"
        timeout-http-keep-alive: "10s"
        timeout-queue: "30s"
        timeout-tunnel: "1h"
        
        # Performance
        maxconn: "50000"
        nbthread: "4"
        
        # Lua support (optional)
        external-has-lua: "true"
        
        # Logging (optional)
        # syslog-server: "address:stdout,format:raw,facility:daemon"
      
      # Extra arguments
      extraArgs:
        - --disable-ipv6  # Disable IPv6 if not needed
        # - --configmap-tcp-services=haproxy-system/tcp-services
        # - --configmap-errorfiles=haproxy-system/errorfiles
      
      # Service configuration
      service:
        type: LoadBalancer
        loadBalancerIP: LB_IP  # Replace with organization IP
        externalTrafficPolicy: Local  # Preserve source IP
        
        # Annotations for cloud/Cilium integration
        annotations:
          # For Cilium IPAM
          io.cilium/lb-ipam-ips: LB_IP  # Replace with organization IP
          
        # Publish service for external-dns
        publishService:
          enabled: true
          pathOverride: "haproxy-system/haproxy-kubernetes-ingress"
      
      # Resources
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 2000m
          memory: 2Gi
      
      # Probes
      livenessProbe:
        httpGet:
          path: /healthz
          port: 1042
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 1
        successThreshold: 1
        failureThreshold: 3
      
      readinessProbe:
        httpGet:
          path: /healthz
          port: 1042
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 1
        successThreshold: 1
        failureThreshold: 3
      
      # Affinity rules (optional)
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/ingress
                operator: In
                values: ["true"]
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["kubernetes-ingress"]
              topologyKey: kubernetes.io/hostname
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
          - ALL
          add:
          - NET_BIND_SERVICE
      
      # Tolerations (optional)
      # tolerations:
      # - key: "node-role.kubernetes.io/ingress"
      #   operator: "Equal"
      #   value: "true"
      #   effect: "NoSchedule"
      
      # Node selector (optional)
      # nodeSelector:
      #   node-role.kubernetes.io/ingress: "true"
    
    # Default backend (optional)
    defaultBackend:
      enabled: false
      replicaCount: 1
      image:
        repository: k8s.gcr.io/defaultbackend-amd64
        tag: "1.5"
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
        limits:
          cpu: 100m
          memory: 64Mi
    
    # Service account
    serviceAccount:
      create: true
      annotations: {}
      name: ""
    
    # RBAC
    rbac:
      create: true
    
    # Pod security policy (deprecated in newer k8s)
    podSecurityPolicy:
      enabled: false
    
    # Prometheus metrics
    metrics:
      enabled: true
      service:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "1024"
          prometheus.io/path: "/metrics"