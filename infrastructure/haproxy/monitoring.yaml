# HAProxy Monitoring Configuration
---
# Headless service for metrics collection
apiVersion: v1
kind: Service
metadata:
  name: haproxy-headless
  namespace: haproxy-system
  labels:
    app.kubernetes.io/name: kubernetes-ingress
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: stat
    port: 1024
    targetPort: 1024
    protocol: TCP
  selector:
    app.kubernetes.io/name: kubernetes-ingress

---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: haproxy-ingress
  namespace: haproxy-system
  annotations:
    kubernetes.io/description: "Prometheus ServiceMonitor for HAProxy ingress metrics collection"
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-ingress
  endpoints:
  - port: stat
    interval: 30s
    path: /metrics
    scheme: http

---
# PrometheusRule for HAProxy alerts
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: haproxy-ingress-rules
  namespace: haproxy-system
  annotations:
    kubernetes.io/description: "Prometheus alerting rules for HAProxy ingress monitoring"
  labels:
    app: prometheus
spec:
  groups:
    - name: haproxy.rules
      interval: 30s
      rules:
        - alert: HaproxyIngressDown
          expr: up{job="haproxy-ingress"} == 0
          for: 5m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: "HAProxy ingress is down"
            description: "HAProxy ingress instance {{ $labels.instance }} has been down for more than 5 minutes."

        - alert: HaproxyIngressHighErrorRate
          expr: |
            (
              sum(rate(haproxy_frontend_http_responses_total{code=~"5.."}[5m])) by (proxy)
              /
              sum(rate(haproxy_frontend_http_responses_total[5m])) by (proxy)
            ) > 0.1
          for: 10m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "HAProxy high error rate"
            description: "HAProxy frontend {{ $labels.proxy }} has error rate of {{ printf \"%.2f\" (mul $value 100) }}% for more than 10 minutes."

        - alert: HaproxyIngressHighLatency
          expr: haproxy_backend_response_time_average_seconds > 1.5
          for: 5m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "HAProxy high backend latency"
            description: "HAProxy backend {{ $labels.proxy }} has average response time of {{ humanizeDuration $value }} for more than 5 minutes."

        - alert: HaproxyIngressBackendDown
          expr: haproxy_backend_up == 0
          for: 5m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: "HAProxy backend down"
            description: "HAProxy backend {{ $labels.proxy }} has been down for more than 5 minutes."

        - alert: HaproxyIngressSessionsHigh
          expr: |
            (
              haproxy_frontend_current_sessions / haproxy_frontend_limit_sessions
            ) > 0.8
          for: 5m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "HAProxy high session usage"
            description: "HAProxy frontend {{ $labels.proxy }} is using {{ printf \"%.2f\" (mul $value 100) }}% of available sessions."

        - alert: HaproxyIngressConnectionErrors
          expr: rate(haproxy_backend_connection_errors_total[5m]) > 0.1
          for: 5m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "HAProxy backend connection errors"
            description: "HAProxy backend {{ $labels.proxy }} has {{ printf \"%.2f\" $value }} connection errors per second."
