apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: prevent-hardcoded-secrets
  annotations:
    policies.kyverno.io/title: Prevent Hardcoded Secrets
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: ConfigMap, Secret
    policies.kyverno.io/description: >-
      Prevents creation of ConfigMaps containing potential secrets or passwords.
      All sensitive data should be managed via External Secrets.
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: check-configmap-secrets
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
          operations:
          - CREATE
          - UPDATE
    validate:
      message: >-
        ConfigMap contains potential secrets. Use External Secrets instead.
        Found: {{ request.object.data.keys(@) | contains(@, 'password') || contains(@, 'secret') || contains(@, 'token') || contains(@, 'key') }}
      deny:
        conditions:
          any:
          - key: "{{ request.object.data | to_string(@) }}"
            operator: AnyIn
            value:
            - "*password*"
            - "*secret*"
            - "*token*"
            - "*private_key*"
            - "*api_key*"

  - name: check-redis-passwords
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
          namespaces:
          - gitea
          - redis
          - valkey
    validate:
      message: >-
        Redis/Valkey passwords must not be stored in ConfigMaps. Use External Secrets.
      pattern:
        data:
          "?*conf": "!*requirepass*"

  - name: require-external-secrets-annotation
    match:
      any:
      - resources:
          kinds:
          - Deployment
          - StatefulSet
          operations:
          - CREATE
          - UPDATE
    validate:
      message: >-
        Services requiring authentication must use External Secrets.
        Add annotation 'security.golder.io/uses-external-secrets: "true"' if using External Secrets.  # pragma: allowlist secret
      anyPattern:
      - metadata:
          annotations:
            security.golder.io/uses-external-secrets: "true"  # pragma: allowlist secret
      - spec:
          template:
            spec:
              containers:
              - name: "*"
                env:
                - name: "!*PASSWORD*"
                - name: "!*SECRET*"
                - name: "!*TOKEN*"
                - name: "!*KEY*"
