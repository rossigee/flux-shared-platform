---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: lvm-metrics-daily
  namespace: lvm-monitoring
spec:
  # Run at 2 AM every day
  schedule: "0 2 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: lvm-metrics
            job-type: daily
        spec:
          serviceAccountName: lvm-monitor
          restartPolicy: OnFailure
          containers:
          - name: metrics-exporter
            # Override this in your cluster kustomization
            image: harbor.golder.lan/library/lvm-metrics-exporter:latest
            imagePullPolicy: IfNotPresent
            env:
            - name: CLUSTER_NAME
              value: "kubernetes"  # Override in cluster kustomization
            - name: PROMETHEUS_PUSH_GATEWAY
              value: "http://prometheus-pushgateway.monitoring.svc.cluster.local:9091"
            - name: LOG_LEVEL
              value: "INFO"
            # Single run for CronJob
            - name: RUN_INTERVAL_SECONDS
              value: "0"
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "500m"
            envFrom:
            - secretRef:
                name: push-gateway-auth
                optional: true

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: lvm-monitor-hourly
  namespace: lvm-monitoring
spec:
  # Run every hour for critical checks
  schedule: "15 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: lvm-monitor
            job-type: hourly-check
        spec:
          serviceAccountName: lvm-monitor
          restartPolicy: OnFailure
          containers:
          - name: quick-check
            image: bitnami/kubectl:latest
            imagePullPolicy: IfNotPresent
            command:
            - /bin/bash
            - -c
            - |
              # Quick check for critical issues
              FAILED_PVCS=$(kubectl get pvc -A | grep -v Bound | grep -v NAMESPACE | wc -l)

              if [ "$FAILED_PVCS" -gt 0 ]; then
                echo "ALERT: $FAILED_PVCS failed or pending PVCs detected"
                kubectl get pvc -A | grep -v Bound | grep -v NAMESPACE

                # Send alert if webhook is configured
                if [ -n "$DISCORD_WEBHOOK_URL" ]; then
                  kubectl get pvc -A | grep -v Bound | grep -v NAMESPACE > /tmp/failed-pvcs.txt
                  ALERT_MSG="ðŸš¨ **LVM Storage Alert**\n$FAILED_PVCS PVCs are failing to provision"
                  curl -H "Content-Type: application/json" \
                       -d "{\"content\": \"$ALERT_MSG\"}" \
                       "$DISCORD_WEBHOOK_URL" || true
                fi
                exit 1
              fi

              echo "All PVCs are healthy"
            resources:
              requests:
                memory: "64Mi"
                cpu: "50m"
              limits:
                memory: "128Mi"
                cpu: "200m"
            envFrom:
            - secretRef:
                name: lvm-monitor-webhook
                optional: true