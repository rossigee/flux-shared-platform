---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets
  namespace: rabbitmq-system
---
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: k8s-golder-secops
  namespace: rabbitmq-system
spec:
  provider:
    vault:
      server: "https://vault.secops.golder.lan"
      path: k8s-golder-secops
      version: v2
      auth:
        jwt:
          path: jwt
          role: rabbitmq-system
          serviceAccountRef:
            name: external-secrets
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-role-rabbitmq-system
  namespace: rabbitmq-system
data:
  role: rabbitmq-system
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: rabbitmq-admin-credentials
  namespace: rabbitmq-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: k8s-golder-secops
  target:
    name: rabbitmq-admin-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        username: admin
        password: "{{ .password }}"
  dataFrom:
    - extract:
        key: rabbitmq-system/admin
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: scratchmail-rabbitmq-credentials
  namespace: rabbitmq-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: k8s-golder-secops
  target:
    name: scratchmail-rabbitmq-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        username: scratchmail
        password: "{{ .password }}"
  dataFrom:
    - extract:
        key: rabbitmq-system/scratchmail
