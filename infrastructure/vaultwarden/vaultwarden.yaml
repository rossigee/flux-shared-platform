apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      containers:
      - name: vaultwarden
        image: ghcr.io/rossigee/vaultwarden:metrics-enabled # {"$imagepolicy": "vaultwarden:vaultwarden"}
        ports:
        - containerPort: 80
          name: http
        - containerPort: 3012
          name: websocket
        env:
        - name: DOMAIN
          value: "https://vault.acme.com"
        - name: WEBSOCKET_ENABLED
          value: "true"
        - name: WEBSOCKET_ADDRESS
          value: "0.0.0.0"
        - name: WEBSOCKET_PORT
          value: "3012"
        - name: ROCKET_PORT
          value: "80"
        - name: SHOW_PASSWORD_HINT
          value: "false"
        - name: WEB_VAULT_ENABLED
          value: "true"
        # Metrics configuration
        - name: ENABLE_METRICS
          value: "true"
        - name: METRICS_TOKEN
          valueFrom:
            secretKeyRef:
              name: vaultwarden-secrets
              key: metrics-token
        # Database configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: vaultwarden-secrets
              key: database-url
        # Admin token
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: vaultwarden-secrets
              key: admin-token
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /alive
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /alive
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: vaultwarden-data
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app: vaultwarden
spec:
  selector:
    app: vaultwarden
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: websocket
    port: 3012
    targetPort: 3012
  - name: metrics
    port: 8080
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden-metrics
  namespace: vaultwarden
  labels:
    app: vaultwarden
    service: metrics
spec:
  selector:
    app: vaultwarden
  ports:
  - name: metrics
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vaultwarden-data
  namespace: vaultwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: lvm-localpv
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden
  namespace: vaultwarden
  annotations:
    haproxy-ingress.github.io/ssl-redirect: "true"
    haproxy-ingress.github.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: "vault-ecdsa-clusterissuer"
spec:
  tls:
  - hosts:
    - vault.acme.com
    secretName: vaultwarden-tls
  rules:
  - host: vault.acme.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vaultwarden
            port:
              number: 80
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: vaultwarden-metrics
  namespace: vaultwarden
  labels:
    app: vaultwarden
    release: prometheus
spec:
  selector:
    matchLabels:
      app: vaultwarden
      service: metrics
  endpoints:
  - port: metrics
    path: /metrics
    bearerTokenSecret:
      name: vaultwarden-secrets
      key: metrics-token
    interval: 30s
    scrapeTimeout: 10s