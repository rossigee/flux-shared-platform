# Network Monitoring Alert Rules Template
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: network-monitoring-alerts
  labels:
    app: prometheus
    team: platform
spec:
  groups:
    - name: dns.rules
      rules:
        - alert: DNSResolutionFailure
          expr: probe_success{job="blackbox-dns"} == 0
          for: 5m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "DNS resolution failure"
            description: "DNS resolution for {{ $labels.instance }} has been failing for more than 5 minutes."

        - alert: CoreDNSDown
          expr: up{job="coredns"} == 0
          for: 5m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: "CoreDNS is down"
            description: "CoreDNS instance {{ $labels.instance }} is down for more than 5 minutes."

        - alert: CoreDNSLatencyHigh
          expr: histogram_quantile(0.99, rate(coredns_dns_request_duration_seconds_bucket[5m])) > 0.1
          for: 10m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "CoreDNS high latency"
            description: "CoreDNS 99th percentile latency is {{ humanizeDuration $value }} for more than 10 minutes."

    - name: tls-certificates.rules
      rules:
        - alert: TLSCertificateExpiringSoon
          expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 7
          for: 0m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "TLS certificate expiring soon"
            description: "TLS certificate for {{ $labels.instance }} expires in {{ humanizeDuration $value }}."

        - alert: TLSCertificateExpired
          expr: probe_ssl_earliest_cert_expiry - time() <= 0
          for: 0m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: "TLS certificate expired"
            description: "TLS certificate for {{ $labels.instance }} has expired {{ humanizeDuration (-$value) }} ago."

        - alert: TLSCertificateInvalid
          expr: probe_tls_version_info == 0
          for: 0m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: "TLS certificate invalid"
            description: "TLS certificate for {{ $labels.instance }} is invalid or cannot be verified."

    - name: connectivity.rules
      rules:
        - alert: WebsiteDown
          expr: probe_success{job="blackbox-http"} == 0
          for: 5m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "Website down"
            description: "Website {{ $labels.instance }} has been down for more than 5 minutes."

        - alert: WebsiteSlowResponse
          expr: probe_http_duration_seconds > 5
          for: 10m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "Website slow response"
            description: "Website {{ $labels.instance }} response time is {{ humanizeDuration $value }}."

        - alert: PingFailure
          expr: probe_success{job="blackbox-icmp"} == 0
          for: 5m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "Ping failure"
            description: "Host {{ $labels.instance }} is not responding to ping for more than 5 minutes."

        - alert: HighPingLatency
          expr: probe_icmp_duration_seconds > 0.2
          for: 15m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "High ping latency"
            description: "Host {{ $labels.instance }} has high ping latency: {{ humanizeDuration $value }}."

    - name: ingress.rules
      rules:
        - alert: IngressControllerDown
          expr: up{job=~".*ingress.*"} == 0
          for: 5m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: "Ingress controller down"
            description: "Ingress controller {{ $labels.instance }} is down for more than 5 minutes."

        - alert: IngressHighErrorRate
          expr: |
            (
              sum(rate(nginx_ingress_controller_requests{status=~"5.."}[5m])) by (ingress)
              /
              sum(rate(nginx_ingress_controller_requests[5m])) by (ingress)
            ) > 0.1
          for: 10m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: "Ingress high error rate"
            description: "Ingress {{ $labels.ingress }} has high error rate: {{ printf \"%.2f\" $value }}% for more than 10 minutes."
